{"version":3,"sources":["theming/colors.js","assets/images/logo.svg","assets/images/logo-bonus.svg","components/Score/Score.styles.js","components/Score/Score.jsx","components/Header/Header.styles.js","components/Header/Header.jsx","components/Game/Button/Button.styles.js","components/Game/Button/Button.jsx","assets/images/icon-paper.svg","assets/images/icon-scissors.svg","assets/images/icon-rock.svg","assets/images/icon-lizard.svg","assets/images/icon-spock.svg","assets/images/bg-triangle.svg","assets/images/bg-pentagon.svg","components/Game/Mode.js","components/Game/Game.styles.js","components/Game/Game.jsx","components/Buttons/Buttons.styles.js","components/Modal/Modal.styles.js","assets/images/image-rules.svg","assets/images/image-rules-bonus.svg","assets/images/icon-close.svg","components/Modal/Modal.jsx","components/Buttons/Buttons.jsx","App.jsx","index.js"],"names":["colors","darkText","scoreText","headerBorder","elementColor","elementShadow","background","from","to","scissors","shadow","paper","rock","lizard","spock","StyledScore","styled","p","theme","ScoreName","span","ScoreNumber","Score","score","aria-live","StyledHeader","header","StyledImage","img","gameMode","Header","src","logoBonus","logo","alt","StyledButton","button","option","gridArea","color","keyframes","winAnimation","win","top","mobile","left","desktop","ButtonSpan","Button","image","handleClick","disabled","aria-label","onClick","aria-hidden","original","TriangleSvg","options","name","beat","svg","PaperSvg","ScissorsSvg","RockSvg","bonus","PentagonSvg","LizardSvg","SpockSvg","flip","opacity","ButtonsContainer","div","mode","ResultContainer","ResultOption","section","ResultOptionFlip","ResultOptionFront","attrs","as","ResultOptionBack","ResultTitle","h2","ResultMessage","ResultMessageText","ResultMessageButton","Game","addScore","gameModeData","useState","userOption","setUserOption","houseOption","setHouseOption","winner","setWinner","selectedOption","user","find","house","Math","round","random","length","includes","setTimeout","setWinnerOption","map","id","Dialog","ModalContainer","ModalTop","Title","CloseButton","Image","Modal","openModal","handleCloseModal","useEffect","handleKeyDown","e","key","document","addEventListener","removeEventListener","role","className","target","classList","contains","CloseSvg","RulesBonusSvg","RulesSvg","Buttons","handleMode","setOpenModal","GlobalStyles","createGlobalStyle","App","JSON","parse","localStorage","getItem","setScore","setGameMode","updatedScore","setItem","stringify","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.24021905.chunk.js","sourcesContent":["const colors = {\r\n    darkText: \"hsl(229, 25%, 31%)\",\r\n    scoreText: \"hsl(229, 64%, 46%)\",\r\n    headerBorder: \"hsl(217, 16%, 45%)\",\r\n    elementColor: \"#fafafa\",\r\n    elementShadow: \"rgba(128, 128, 128, 0.35)\",\r\n    background: {\r\n        from: \"hsl(214, 47%, 23%)\",\r\n        to: \"hsl(237, 49%, 15%)\"\r\n    },\r\n    scissors: {\r\n        from: \"hsl(39, 89%, 49%)\",\r\n        to: \"hsl(40, 84%, 53%)\",\r\n        shadow: \"#C87019\"\r\n    },\r\n    paper: {\r\n        from: \"hsl(230, 89%, 62%)\",\r\n        to: \"hsl(230, 89%, 65%)\",\r\n        shadow: \"#2643C5\"\r\n    },\r\n    rock: {\r\n        from: \"hsl(349, 71%, 52%)\",\r\n        to: \"hsl(349, 70%, 56%)\",\r\n        shadow: \"#9B1530\"\r\n    },\r\n    lizard: {\r\n        from: \"hsl(261, 73%, 60%)\",\r\n        to: \"hsl(261, 72%, 63%)\",\r\n        shadow: \"#5D31AA\"\r\n    },\r\n    spock: {\r\n        from: \"hsl(189, 59%, 53%)\",\r\n        to: \"hsl(189, 58%, 57%)\",\r\n        shadow: \"#2B8EAD\"\r\n    }\r\n};\r\n\r\nexport default colors;","export default __webpack_public_path__ + \"static/media/logo.a4a2b39f.svg\";","export default __webpack_public_path__ + \"static/media/logo-bonus.9bf8aeb8.svg\";","import styled from \"styled-components\";\r\n\r\nexport const StyledScore = styled.p`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: ${({theme}) => theme.elementColor};\r\n  border-radius: 5px;\r\n  width: 80px;\r\n  height: 72px;\r\n  \r\n  @media screen and (min-width: 768px) {\r\n    width: 150px;\r\n    height: 115px;\r\n  }\r\n`;\r\n\r\nexport const ScoreName = styled.span`\r\n  text-transform: uppercase;\r\n  color: ${({theme}) => theme.scoreText};\r\n  font-size: 0.8rem;\r\n  margin-bottom: -5px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 1.3rem;\r\n  }\r\n`;\r\n\r\nexport const ScoreNumber = styled.span`\r\n  color: ${({theme}) => theme.darkText};\r\n  font-size: 2.2rem;\r\n  font-weight: bold;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 3.5rem;\r\n  }\r\n`;","import React from \"react\";\r\nimport { ScoreName, ScoreNumber, StyledScore } from \"./Score.styles\";\r\n\r\nconst Score = ({score}) => (\r\n    <StyledScore>\r\n        <ScoreName>Score</ScoreName>\r\n        <ScoreNumber aria-live=\"polite\">{score}</ScoreNumber>\r\n    </StyledScore>\r\n);\r\n\r\nexport default Score;","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n  position: relative;\r\n  z-index: 100;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border: 4px solid ${({theme}) => theme.headerBorder};\r\n  border-radius: 10px;\r\n  padding-left: 22px;\r\n  padding-right: 10px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 100%;\r\n  max-width: 700px;\r\n  height: 100px;\r\n  \r\n  @media screen and (min-width: 768px) {\r\n    padding-left: 30px;\r\n    padding-right: 22px;\r\n    height: 155px;\r\n  }\r\n`;\r\n\r\nexport const StyledImage = styled.img`\r\n  width: 82px;\r\n  height: min-content;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: ${({gameMode}) => gameMode === \"original\" ? \"160px\" : \"110px\"};\r\n  }\r\n`","import React from \"react\";\r\nimport logo from \"../../assets/images/logo.svg\";\r\nimport logoBonus from \"../../assets/images/logo-bonus.svg\";\r\nimport Score from  \"../Score/Score\";\r\nimport { StyledHeader, StyledImage } from \"./Header.styles\";\r\n\r\nconst Header = ({score, gameMode}) => (\r\n    <StyledHeader>\r\n        <StyledImage src={gameMode === \"bonus\" ? logoBonus : logo} alt=\"logo\" gameMode={gameMode}/>\r\n        <Score score={score} />\r\n    </StyledHeader>\r\n);\r\n\r\nexport default Header;","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst winAnimation = ({color}) => {\r\n    return keyframes`\r\n      10%{\r\n        box-shadow: inset 0 -5px 2px 2px ${(color)};\r\n      }\r\n      \r\n      30%{\r\n        box-shadow: inset 0 -5px 2px 2px $${(color)},\r\n                    0 0 0 20px #2d3e5c;\r\n      }\r\n      \r\n      60%{\r\n        box-shadow: inset 0 -5px 2px 2px ${(color)},\r\n                    0 0 0 20px #2d3e5c,\r\n                    0 0 0 50px #273856;\r\n      }\r\n      \r\n      100%{\r\n        box-shadow: inset 0 -5px 2px 2px ${(color)},\r\n                    0 0 0 20px #2d3e5c,\r\n                    0 0 0 50px #273856,\r\n                    0 0 0 80px #223150;\r\n      }\r\n    `;\r\n}\r\n\r\n\r\nexport const StyledButton = styled.button`\r\n  position: relative;\r\n  background-image: linear-gradient(${({theme, option}) => `${theme[option].from}, ${theme[option].to}`});\r\n  grid-area: ${({gridArea}) => gridArea};\r\n  box-shadow: inset 0 -5px 2px 2px ${({theme, option}) => theme[option].shadow};\r\n  padding: 15px;\r\n  border: none;\r\n  border-radius: 50%;\r\n  width: 130px;\r\n  height: 130px;\r\n  cursor: pointer;\r\n  animation: ${winAnimation(({theme, option}) => theme[option].shadow)} 2s 2s ease alternate infinite;\r\n  animation-play-state: ${({win}) => win ? \"running\" : \"paused\"};\r\n  top: ${({top}) => top.mobile};\r\n  left: ${({left}) => left.mobile};\r\n  \r\n  &:focus,\r\n  &:focus-visible{\r\n    outline: 4px dashed ${({theme}) => theme.elementColor};\r\n    outline-offset: 10px;\r\n  }\r\n  \r\n  &:focus:not(:focus-visible){\r\n    outline: none;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: ${({gameMode}) => gameMode === \"original\" ? \"200px\" : \"150px\"};\r\n    height: ${({gameMode}) => gameMode === \"original\" ? \"200px\" : \"150px\"};\r\n    padding: ${({gameMode}) => gameMode === \"original\" ? \"23px\" : \"17px\"};\r\n    transition: transform 0.2s;\r\n    top: ${({top}) => top.desktop};\r\n    left: ${({left}) => left.desktop};\r\n    \r\n    &:hover{\r\n     transform: scale(0.9); \r\n    }\r\n    \r\n    & img{\r\n      width: ${({gameMode}) => gameMode === \"original\" ? \"65px\" : \"50px\"};\r\n    }\r\n  }\r\n  \r\n  &:disabled{\r\n    @media screen and (min-width: 768px) {\r\n      width: 300px;\r\n      height: 300px;\r\n      padding: 35px;\r\n      top: 0;\r\n      left: 0;\r\n\r\n      & img{\r\n        width: 105px;\r\n      }\r\n    }\r\n  }\r\n  \r\n`;\r\n\r\nexport const ButtonSpan = styled.span`\r\n  display: grid;\r\n  place-items: center;\r\n  background-color: ${({theme}) => theme.elementColor};\r\n  box-shadow: inset 0 5px 2px 1px ${({theme}) => theme.elementShadow};\r\n  border-radius: 50%;\r\n  width: 100%;\r\n  height: 100%;\r\n`;","import React from \"react\";\r\nimport {ButtonSpan, StyledButton} from \"./Button.styles\";\r\n\r\nconst Button = ({option, image, gridArea, handleClick, disabled, win, gameMode, top, left}) => (\r\n    <StyledButton\r\n        aria-label={option}\r\n        option={option}\r\n        gridArea={gridArea}\r\n        onClick={() => handleClick(option)}\r\n        disabled={disabled}\r\n        win={win}\r\n        gameMode={gameMode}\r\n        top={top}\r\n        left={left}\r\n    >\r\n        <ButtonSpan aria-hidden=\"true\">\r\n            <img src={image} alt={option} />\r\n        </ButtonSpan>\r\n    </StyledButton>\r\n);\r\n\r\nexport default Button;","export default __webpack_public_path__ + \"static/media/icon-paper.8b57a6b1.svg\";","export default __webpack_public_path__ + \"static/media/icon-scissors.3b1a5d7e.svg\";","export default __webpack_public_path__ + \"static/media/icon-rock.476e90a9.svg\";","export default __webpack_public_path__ + \"static/media/icon-lizard.0f83914c.svg\";","export default __webpack_public_path__ + \"static/media/icon-spock.f4d7eee8.svg\";","export default __webpack_public_path__ + \"static/media/bg-triangle.c0c30b56.svg\";","export default __webpack_public_path__ + \"static/media/bg-pentagon.1ad6d365.svg\";","import PaperSvg from \"../../assets/images/icon-paper.svg\";\r\nimport ScissorsSvg from \"../../assets/images/icon-scissors.svg\";\r\nimport RockSvg from \"../../assets/images/icon-rock.svg\";\r\nimport LizardSvg from \"../../assets/images/icon-lizard.svg\";\r\nimport SpockSvg from \"../../assets/images/icon-spock.svg\";\r\nimport TriangleSvg from \"../../assets/images/bg-triangle.svg\";\r\nimport PentagonSvg from \"../../assets/images/bg-pentagon.svg\"\r\n\r\nexport const original = {\r\n    background: TriangleSvg,\r\n    options: [\r\n        {\r\n            name: \"paper\",\r\n            beat: [\"rock\"],\r\n            svg: PaperSvg,\r\n            gridArea: \"1 / 1 / 2 / 2\",\r\n            left: {\r\n                mobile: \"0\",\r\n                desktop: \"60px\"\r\n            },\r\n            top: {\r\n                mobile: \"0\",\r\n                desktop: \"-50px\"\r\n            }\r\n        },\r\n        {\r\n            name: \"scissors\",\r\n            beat: [\"paper\"],\r\n            svg: ScissorsSvg,\r\n            gridArea: \"1 / 3 / 2 / 3\",\r\n            left: {\r\n                mobile: \"0\",\r\n                desktop: \"-60px\"\r\n            },\r\n            top: {\r\n                mobile: \"0\",\r\n                desktop: \"-50px\"\r\n            }\r\n        },\r\n        {\r\n            name: \"rock\",\r\n            beat: [\"scissors\"],\r\n            svg: RockSvg,\r\n            gridArea: \"2 / 2 / 3 / 2\",\r\n            left: {\r\n                mobile: \"0\",\r\n                desktop: \"0\"\r\n            },\r\n            top: {\r\n                mobile: \"0\",\r\n                desktop: \"-60px\"\r\n            }\r\n        },\r\n    ]\r\n};\r\n\r\nexport const bonus = {\r\n    background: PentagonSvg,\r\n    options: [\r\n        {\r\n            name: \"scissors\",\r\n            beat: [\"paper\", \"lizard\"],\r\n            svg: ScissorsSvg,\r\n            gridArea: \"1 / 2 / 2 / 3\",\r\n            left: {\r\n                mobile: \"0\",\r\n                desktop: \"0\"\r\n            },\r\n            top: {\r\n                mobile: \"-10px\",\r\n                desktop: \"-25px\"\r\n            }\r\n        },\r\n        {\r\n            name: \"paper\",\r\n            beat: [\"rock\", \"spock\"],\r\n            svg: PaperSvg,\r\n            gridArea: \"2 / 3 / 3 / 3\",\r\n            left: {\r\n                mobile: \"0\",\r\n                desktop: \"0\"\r\n            },\r\n            top: {\r\n                mobile: \"-25px\",\r\n                desktop: \"-50px\"\r\n            }\r\n        },\r\n        {\r\n            name: \"rock\",\r\n            beat: [\"scissors\", \"lizard\"],\r\n            svg: RockSvg,\r\n            gridArea: \"3 / 3 / 4 / 4\",\r\n            left: {\r\n                mobile: \"-25px\",\r\n                desktop: \"-25px\"\r\n            },\r\n            top: {\r\n                mobile: \"20px\",\r\n                desktop: \"-10px\"\r\n            }\r\n        },\r\n        {\r\n            name: \"lizard\",\r\n            beat: [\"spock\", \"paper\"],\r\n            svg: LizardSvg,\r\n            gridArea: \"3 / 2 / 4 / 3\",\r\n            left: {\r\n                mobile: \"-90px\",\r\n                desktop: \"-100px\"\r\n            },\r\n            top: {\r\n                mobile: \"20px\",\r\n                desktop: \"-10px\"\r\n            }\r\n        },\r\n        {\r\n            name: \"spock\",\r\n            beat: [\"scissors\", \"rock\"],\r\n            svg: SpockSvg,\r\n            gridArea: \"2 / 1 / 3 / 2\",\r\n            left: {\r\n                mobile: \"0\",\r\n                desktop: \"0\"\r\n            },\r\n            top: {\r\n                mobile: \"-25px\",\r\n                desktop: \"-50px\"\r\n            }\r\n        }\r\n    ]\r\n};","import styled, {keyframes} from \"styled-components\";\r\n\r\nconst flip = keyframes`\r\n  from{\r\n    transform: rotateY(0);\r\n  }\r\n  to{\r\n    transform: rotateY(180deg);\r\n  }\r\n`;\r\n\r\nconst opacity = keyframes`\r\n  from{\r\n    opacity: 0;\r\n  }\r\n  \r\n  to{\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: ${({gameMode}) => gameMode === \"bonus\" ? \"repeat(4, min-content)\" : \"repeat(3, min-content)\"};\r\n  grid-template-rows: ${({gameMode}) => gameMode === \"bonus\" ? \"repeat(3, min-content)\" : \"repeat(2, min-content)\"};\r\n  justify-content: center;\r\n  row-gap: ${({gameMode}) => gameMode === \"bonus\" ? \"0\" : \"50px\"};\r\n  background-image: ${({svg}) => `url(${svg})`};\r\n  background-repeat: no-repeat;\r\n  background-position: center 50px;\r\n  margin-top: 100px;\r\n  transform: scale(0.7);\r\n  transition: transform 0.2s;\r\n  animation: ${opacity} 0.1s;\r\n  \r\n  @media screen and (min-width: 350px) {\r\n    transform: scale(0.8);\r\n  }\r\n\r\n  @media screen and (min-width: 420px) {\r\n    transform: scale(1);\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    margin-top: ${({gameMode}) => gameMode === \"original\" ? \"100px\" : \"60px\"};\r\n    background-position-y: ${({mode}) => mode === \"original\" ? \"100px\" : \"center\"};\r\n  }\r\n`;\r\n\r\nexport const ResultContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  justify-content: center;\r\n  justify-items: center;\r\n  align-items: center;\r\n  column-gap: 80px;\r\n  row-gap: 80px;\r\n  margin-top: 60px;\r\n  max-width: 950px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  transform: scale(0.7);\r\n  transition: transform 0.2s;\r\n  animation: ${opacity} 0.2s;\r\n\r\n  @media screen and (min-width: 350px) {\r\n    transform: scale(0.8);\r\n  }\r\n\r\n  @media screen and (min-width: 420px) {\r\n    column-gap: 50px;\r\n    transform: scale(1);\r\n  }\r\n  \r\n  @media screen and (min-width: 1024px) {\r\n    column-gap: 0;\r\n    grid-template-columns: 1fr 350px 1fr;\r\n    height: 400px;\r\n  }\r\n`;\r\n\r\nexport const ResultOption = styled.section`\r\n  position: relative;\r\n  z-index: -1;\r\n  display: flex;\r\n  flex-direction: column-reverse;\r\n  align-items: center;\r\n  text-align: center;\r\n  width: 100%;\r\n  \r\n  &:first-child{\r\n    z-index: 100; \r\n  }\r\n  \r\n  @media screen and (min-width: 768px) {\r\n    height: 410px;\r\n    flex-direction: column;\r\n    \r\n      &:first-child{\r\n        grid-column: 1 / 2;\r\n      }\r\n    \r\n      &:nth-child(2){\r\n        grid-column: 3 / 4;\r\n      }\r\n  }\r\n`;\r\n\r\nexport const ResultOptionFlip = styled.div`\r\n  position: relative;\r\n  display: grid;\r\n  justify-items: center;\r\n  perspective: 800px;\r\n  transition: transform 2s;\r\n  transform-style: preserve-3d;\r\n  animation: ${flip} 2s forwards;\r\n`;\r\n\r\nexport const ResultOptionFront = styled(ResultOption).attrs({\r\n    as: \"div\"\r\n})`\r\n  position: relative;\r\n  backface-visibility: hidden;\r\n\r\n  transform: rotateY( 180deg);\r\n`;\r\n\r\nexport const ResultOptionBack = styled.div`\r\n  position: absolute;\r\n  background-color: #1A2946;\r\n  backface-visibility: hidden;\r\n  border-radius: 50%;\r\n  width: 130px;\r\n  height: 130px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 300px;\r\n    height: 300px;\r\n  }\r\n`;\r\n\r\nexport const ResultTitle = styled.h2`\r\n  position: relative;\r\n  z-index: 100;\r\n  color: ${({theme}) => theme.elementColor};\r\n  text-transform: uppercase;\r\n  font-size: 1rem;\r\n  font-weight: 400;\r\n  letter-spacing: 2px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 1.8rem;\r\n    margin-bottom: 60px;\r\n  }\r\n`;\r\n\r\nexport const ResultMessage = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n  gap: 1rem;\r\n  color: ${({theme}) => theme.elementColor};\r\n  opacity: 0;\r\n  animation: ${opacity} 2s 2s forwards;\r\n  order: 10;\r\n  grid-column: span 2;\r\n  \r\n  @media screen and (min-width: 1024px) {\r\n    grid-area: 1 / 2 / 2 / 3;\r\n  }\r\n`;\r\n\r\nexport const ResultMessageText = styled.div`\r\n  text-transform: uppercase;\r\n  font-size: 3rem;\r\n`;\r\n\r\nexport const ResultMessageButton = styled.button`\r\n  color: ${({theme}) => theme.darkText};\r\n  text-transform: uppercase;\r\n  font-size: 1.1rem;\r\n  font-weight: 700;\r\n  border: none;\r\n  border-radius: 5px;\r\n  width: 100%;\r\n  height: 50px;\r\n  cursor: pointer;\r\n  \r\n  &:focus{\r\n    outline: 3px dashed ${({theme}) => theme.elementColor};\r\n    outline-offset: 5px;\r\n  }\r\n`;","import React, { useState } from \"react\";\r\nimport { nanoid as id } from \"nanoid\";\r\nimport Button from \"./Button/Button\";\r\nimport { original, bonus } from \"./Mode\";\r\n\r\nimport {\r\n    ButtonsContainer,\r\n    ResultContainer,\r\n    ResultMessage,\r\n    ResultMessageButton,\r\n    ResultMessageText,\r\n    ResultOption,\r\n    ResultTitle,\r\n    ResultOptionFront,\r\n    ResultOptionBack,\r\n    ResultOptionFlip\r\n} from \"./Game.styles\";\r\n\r\n\r\nconst Game = ({addScore, gameMode}) => {\r\n    const gameModeData = gameMode === \"original\" ? original : bonus;\r\n    const [userOption, setUserOption] = useState({});\r\n    const [houseOption, setHouseOption] = useState({});\r\n    const [winner, setWinner] = useState(\"\");\r\n\r\n    const setWinnerOption = (user, house) => {\r\n        if(user.name === house.name) {\r\n            setWinner(\"draw\");\r\n        }else if(user.beat.includes(house.name)) {\r\n            setWinner(\"user\");\r\n            setTimeout(() => addScore(), 2000);\r\n        }else if(user.beat !== house.name){\r\n            setWinner(\"house\");\r\n        }\r\n    };\r\n\r\n    const handleClick = (selectedOption) => {\r\n        const {options} = gameModeData;\r\n        const user = options.find(option => option.name === selectedOption);\r\n        const randomNumber = Math.round(Math.random() * (options.length - 1));\r\n        const house = options[randomNumber];\r\n\r\n        setUserOption(user);\r\n        setHouseOption(house);\r\n        setWinnerOption(user, house);\r\n    };\r\n\r\n    const handleReset = () => {\r\n        setUserOption({});\r\n        setHouseOption({});\r\n    };\r\n\r\n    return (\r\n        !userOption.name ? (\r\n            <ButtonsContainer\r\n                svg={gameModeData.background}\r\n                gameMode={gameMode}\r\n            >\r\n                {\r\n                    gameModeData.options.map(({name, svg, gridArea, top, left}) => (\r\n                        <Button\r\n                            option={name}\r\n                            image={svg}\r\n                            gridArea={gridArea}\r\n                            handleClick={handleClick}\r\n                            key={id()}\r\n                            gameMode={gameMode}\r\n                            top={top}\r\n                            left={left}\r\n                        />\r\n                    ))\r\n                }\r\n            </ButtonsContainer>\r\n        ) : (\r\n            <ResultContainer>\r\n                <ResultOption>\r\n                    <ResultTitle>You picked</ResultTitle>\r\n                    <Button\r\n                        option={userOption.name}\r\n                        image={userOption.svg}\r\n                        gridArea={\"\"}\r\n                        disabled\r\n                        win={winner === \"user\"}\r\n                        top={{mobile: \"0\", desktop: \"0\"}}\r\n                        left={{mobile: \"0\", desktop: \"0\"}}\r\n                    />\r\n                </ResultOption>\r\n                <ResultMessage>\r\n                    <ResultMessageText>\r\n                        {\r\n                            winner === \"draw\"\r\n                                ? \"It's a tie\"\r\n                                : winner === \"user\"\r\n                                    ? \"You Win\"\r\n                                    : \"You Lose\"\r\n                        }\r\n                    </ResultMessageText>\r\n                    <ResultMessageButton onClick={handleReset}>\r\n                        Play Again\r\n                    </ResultMessageButton>\r\n                </ResultMessage>\r\n                <ResultOption>\r\n                    <ResultTitle>The house picked</ResultTitle>\r\n                    <ResultOptionFlip>\r\n                        <ResultOptionBack />\r\n                        <ResultOptionFront>\r\n                            <Button\r\n                                option={houseOption.name}\r\n                                image={houseOption.svg}\r\n                                gridArea={\"\"}\r\n                                disabled\r\n                                win={winner === \"house\"}\r\n                                top={{mobile: \"0\", desktop: \"0\"}}\r\n                                left={{mobile: \"0\", desktop: \"0\"}}\r\n                            />\r\n                        </ResultOptionFront>\r\n                    </ResultOptionFlip>\r\n                </ResultOption>\r\n            </ResultContainer>\r\n        )\r\n    )\r\n};\r\n\r\nexport default Game;","import styled from \"styled-components\";\r\n\r\nexport const ButtonsContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n  gap: 1rem;\r\n  width: 100%;\r\n  max-width: 1274px;\r\n  margin-top: auto;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  \r\n  @media screen and (min-width: 768px) {\r\n    justify-content: flex-end;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background-color: transparent;\r\n  border: 2px solid ${({theme}) => theme.headerBorder};\r\n  border-radius: 10px;\r\n  color: ${({theme}) => theme.elementColor};\r\n  text-transform: uppercase;\r\n  font-size: 1rem;\r\n  font-weight: 600;\r\n  letter-spacing: 2px;\r\n  min-width: 130px;\r\n  height: 42px;\r\n  cursor: pointer;\r\n  margin-top: auto;\r\n  \r\n  &:focus{\r\n    outline: 3px dashed ${({theme}) => theme.elementColor};\r\n    outline-offset: 5px;\r\n  }\r\n  \r\n  @media screen and (min-width: 768px) {\r\n    transition: color 0.3s, border-color 0.3s, background-color 0.3s;\r\n    \r\n    &:hover{\r\n      background-color: ${({theme}) => theme.elementColor};\r\n      color: ${({theme}) => theme.darkText};\r\n      border-color: transparent;\r\n    }\r\n  }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Dialog = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: 1000;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  border: none;\r\n  padding: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n`;\r\n\r\nexport const ModalContainer = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: ${({theme}) => theme.elementColor};\r\n  border: none;\r\n  padding-top: 85px;\r\n  padding-bottom: 100px;\r\n  height: 100%;\r\n  \r\n  @media screen and (min-width: 1024px) {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    border-radius: 15px;\r\n    padding: 15px 33px 45px;\r\n    width: 400px;\r\n    min-height: 395px;\r\n    height: max-content;\r\n  }\r\n`;\r\n\r\nexport const ModalTop = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  color: ${({theme}) => theme.darkText};\r\n  text-transform: uppercase;\r\n  margin-top: 0;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n\r\nexport const CloseButton = styled.button`\r\n  border: none;\r\n  background-image: url(${({image}) => image});\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  background-color: transparent;\r\n  width: 20px;\r\n  height: 20px;\r\n  cursor: pointer;\r\n\r\n  @media screen and (max-width: 1023px) {\r\n    position: absolute;\r\n    bottom: 65px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n  }\r\n  \r\n  &:focus{\r\n    outline: 3px dashed ${({theme}) => theme.darkText};\r\n    outline-offset: 5px;\r\n  }\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  margin-top: auto;\r\n  margin-bottom: auto;\r\n`;","export default __webpack_public_path__ + \"static/media/image-rules.258b753f.svg\";","export default __webpack_public_path__ + \"static/media/image-rules-bonus.513320fb.svg\";","export default __webpack_public_path__ + \"static/media/icon-close.bde602ec.svg\";","import React, {useEffect} from \"react\";\r\nimport {\r\n    Dialog,\r\n    ModalContainer,\r\n    ModalTop,\r\n    Title,\r\n    CloseButton,\r\n    Image\r\n} from \"./Modal.styles\";\r\nimport RulesSvg from \"../../assets/images/image-rules.svg\";\r\nimport RulesBonusSvg from \"../../assets/images/image-rules-bonus.svg\";\r\nimport CloseSvg from \"../../assets/images/icon-close.svg\";\r\n\r\nconst Modal = ({openModal, handleCloseModal, gameMode}) => {\r\n    useEffect(() => {\r\n        const handleKeyDown = (e) => e.key === \"Escape\" && handleCloseModal();\r\n        \r\n        document.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n        return () => document.removeEventListener(\"keydown\", handleKeyDown);\r\n    }, [handleCloseModal]);\r\n\r\n    const handleClick = (e) => {\r\n        e.target.classList.contains(\"modal\") && handleCloseModal();\r\n    };\r\n    \r\n    return (\r\n        <Dialog role=\"dialog\" className=\"modal\" onClick={handleClick} >\r\n            <ModalContainer>\r\n                <ModalTop>\r\n                    <Title>Rules</Title>\r\n                    <CloseButton\r\n                        image={CloseSvg}\r\n                        aria-label={\"Close Rules\"}\r\n                        onClick={handleCloseModal}\r\n                    />\r\n                </ModalTop>\r\n                <Image\r\n                    src={gameMode === \"bonus\" ? RulesBonusSvg : RulesSvg}\r\n                    alt={\r\n                        gameMode === \"bonus\"\r\n                            ? \"Scissors beats paper and lizard, paper beats rock and pock, rock beats lizard and scissors, lizard beats paper and pock, and pock beats scissors and rock\"\r\n                            : \"Paper beats rock, rock beats scissors and scissors beats paper\"\r\n                    }\r\n                />\r\n            </ModalContainer>\r\n        </Dialog>\r\n    )\r\n};\r\n\r\nexport default Modal;","import React, { useState } from \"react\";\r\nimport { ButtonsContainer, Button }from \"./Buttons.styles\";\r\nimport Modal from \"../Modal/Modal\";\r\n\r\nconst Buttons = ({gameMode, handleMode}) => {\r\n    const [openModal, setOpenModal] = useState(false);\r\n\r\n    const handleOpenModal = () => setOpenModal(true);\r\n\r\n    const handleCloseModal = () => setOpenModal(false);\r\n\r\n    return(\r\n        <ButtonsContainer>\r\n            <Button onClick={handleMode}>\r\n                {\r\n                    gameMode === \"original\"\r\n                        ? \"bonus\"\r\n                        : \"original\"\r\n                }\r\n            </Button>\r\n            <Button onClick={handleOpenModal}>Rules</Button>\r\n            {\r\n                openModal && <Modal openModal={openModal} handleCloseModal={handleCloseModal} gameMode={gameMode}/>\r\n            }\r\n\r\n        </ButtonsContainer>\r\n    )\r\n};\r\n\r\nexport default Buttons;","import React, { useState } from \"react\";\r\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\r\nimport Normalize from 'react-normalize';\r\nimport colors from \"./theming/colors\"\r\nimport Header from \"./components/Header/Header\";\r\nimport Game from \"./components/Game/Game\";\r\nimport Buttons from \"./components/Buttons/Buttons\";\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  html,\r\n  body::-webkit-scrollbar-track{\r\n    background-image: linear-gradient(${({theme}) => (\r\n        `${theme.background.from}, ${theme.background.to}`\r\n    )});\r\n  }\r\n  \r\n  html{\r\n    font-family: 'Barlow Semi Condensed', sans-serif;\r\n    box-sizing: border-box;\r\n  }\r\n  \r\n  *,\r\n  *::before,\r\n  *::after{\r\n    box-sizing: inherit;\r\n  }\r\n  \r\n  body{\r\n    margin: 0;\r\n    padding: 30px;\r\n    min-height: 100vh;\r\n\r\n    &::-webkit-scrollbar{\r\n      width: 8px;\r\n    }\r\n    \r\n    &::-webkit-scrollbar-thumb{\r\n      background-color: ${({theme}) => theme.elementColor};\r\n      border-radius: 5px;\r\n    }\r\n  }\r\n  \r\n  img{\r\n    max-width: 100%;\r\n  }\r\n  \r\n  .app{\r\n    display: flex;\r\n    flex-direction: column;\r\n    min-height: 100vh;\r\n    height: 720px;\r\n\r\n    @media screen and (min-width: 768px){\r\n      height: 900px;\r\n    }\r\n\r\n    @media screen and (min-width: 1024px){\r\n      height: 800px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst App = () => {\r\n    const [score, setScore] = useState(\r\n        JSON.parse(localStorage.getItem(\"score\")) || 0\r\n    );\r\n    const [gameMode, setGameMode] = useState(\"original\");\r\n\r\n    const handleMode = () => {\r\n        gameMode === \"original\"\r\n            ? setGameMode(\"bonus\")\r\n            : setGameMode(\"original\");\r\n    };\r\n\r\n    const addScore = () => {\r\n        const updatedScore = score + 1;\r\n        setScore(updatedScore);\r\n        localStorage.setItem(\"score\", JSON.stringify(updatedScore));\r\n    };\r\n\r\n    return(\r\n        <ThemeProvider theme={colors}>\r\n            <Normalize />\r\n            <GlobalStyles />\r\n            <Header score={score} gameMode={gameMode}/>\r\n            <main>\r\n                <Game addScore={addScore} gameMode={gameMode}/>\r\n            </main>\r\n                <Buttons\r\n                    gameMode={gameMode}\r\n                    handleMode={handleMode}\r\n                />\r\n        </ThemeProvider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <div className=\"app\">\r\n        <App />\r\n      </div>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}